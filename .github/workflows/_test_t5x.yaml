name: ~test T5X

on:
  #   branches: [ "main" ] 
  # pull_request:
  #   branches: [ "main" ]
  # schedule:
  #   - cron: '30 3 * * *'  # runs daily at 03:30 AM
  ## allow manual run from the Actions tab
  workflow_call:

env:
  OCI_TENSORBOARD_HOST: "ubuntu@165.1.79.135"
  OCI_HOSTKEY_TENSORBOARD_HOST: "165.1.79.135 ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQC+/i0SQXfIUF/GVFFw4XbjPObOuI5Xe7ZYS8fxYtQGXVBnaGs+2qYpmNS2GNoMhAc/w6+uP0gNJcVj0TXNWtSJgXgagO6zVqD4xGSqNOU82PsqRiJvVzjA4nTcGrBdIzh6sLwgkjuGKKjF5XhCJ6BQwPH/GLS9b16eewi3Ppmxp1SKca2sXIUPLrCOpZ4RY/hiQm9vTUfmOWuijxQcbOGWtc6ghV1IJpyCZGtvakhr/nR1LFQmDdbJ7MtKyqmoBbeiEQmlht2a7FGVQY8KTZsVSpYUUHT2zwGLBqogRlaxbv3ANavklG06ZpQJtpf300nr6Ix1UpAedhVpuJVGVJR9kyGZHrll60tjTMzy5Kq3RmxjmF9b524Ig8gMmwIi1G+sU5+OUSzVNGzeuvAhSOwKbFLFq9n8nPdBYGh2MDSm4aIv3Zl/YmyM4Ts2OdKF/BWyqUaGtgz38zUWEbZ2QvnebiTGcBkjBC4b8yMCjTubIFanjUNOFWz4E6GWW5enh5c="

jobs:

  t5x-scaling:
    runs-on: ubuntu-22.04
    steps:
      - name: Print environment variables
        run: env

      - name: Setup SSH agent
        uses: webfactory/ssh-agent@v0.8.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Configure variables
        shell: bash -x -e {0}
        run: |
          TZ="America/Los_Angeles" DATE=$(date "+%Y-%m-%d")
          echo "DATE=${DATE}" >> $GITHUB_ENV

      - name: Add known SSH host
        shell: bash -x -e {0}
        run: |
          echo "150.230.212.101 ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDcOJt0Q0qYfShF03/rFPYpq+muMHBIfMlvitzEsSm4onWkG4YU0NBvG5WKcU2dLoMdhCIy+SQYtDeNm9Lj5GIqsLSsVMBSAurIMAzyiJU3DuahiWQGMa3rOVEFzgRtmo58202Ijw61WwVi47OvzJL72Oy2RO8hqVvU0ojcQo1jiQxtj39u1Be7dzIXJHLs7xdpI7V8mGxwQ1dgcjcXSh43br9V24pAebK2abGD8KRZ1H0YDgyaYek0ub5AHAeeznL/FUs0lud1xicABd5qo+w1PyIA+1A+TkRTrbHCBtc2w9w3zaO4p+Yi/ITTjhtnPTAmTD7U+km2mhiR+dLbx15D" >> ~/.ssh/known_hosts

      - name: Run SLURM jobs over SSH
        shell: bash -x -e {0}
        run: |
          _(){
            ssh ${{ secrets.CLUSTER_LOGIN_USER }}@${{ secrets.CLUSTER_LOGIN_IP }} "$*"
          }
          _ date
          _ hostname
          _ whoami
          _ sinfo
          NNODE=1
          NGPU=8
          GPU_LIST=$(seq -s , 0 $(($NGPU - 1)))
          OUTPUT=$(_ mktemp -d -p /nfs/cluster)
          _ bash -s << EOF
          #!/bin/bash
          #SBATCH --nodes=${NNODE}
          #SBATCH --gpus-per-node=${NGPU}
          #SBATCH --time=00:30:00
          #SBATCH --exclusive
          srun \
            --container-image=ghcr.io#nvidia/t5x:latest \
            --container-mounts=${OUTPUT}:/output \
            --container-entrypoint \
            test-t5x.sh \
              --output ${OUTPUT}/$DATE-${NGPU}G${NNODE}N \
              --dtype bfloat16 \
              --batch-per-gpu 16 \
              --gpus ${GPU_LIST} \
              --epochs 7 \
              --steps-per-epoch 100
          EOF

          # srun \
          #   --container-image=ghcr.io#nvidia/t5x:latest \
          #   --container-mounts=${OUTPUT}:/output \
          #   --container-entrypoint \
          #   test-t5x.sh \
          #     --output /output/$DATE-${NGPU}G${NNODE}N \
          #     --dtype bfloat16 \
          #     --batch-per-gpu 16 \
          #     --gpus ${GPU_LIST} \
          #     --epochs 7 \
          #     --steps-per-epoch 100
          # EOF
          # )
          _ ls ${OUTPUT}

      # - name: Run SLURM jobs over SSH
      #   uses: appleboy/ssh-action@v0.1.9
      #   with:
      #     host: ${{ secrets.CLUSTER_LOGIN_IP }}
      #     fingerprint: ${{ secrets.CLUSTER_LOGIN_FINGERPRINT }}
      #     username: ${{ secrets.CLUSTER_LOGIN_USER }}
      #     key: ${{ secrets.SSH_PRIVATE_KEY }}
      #     script_stop: true  # stop on first failure
      #     command_timeout: 60m
      #     script: |
      #       date
      #       hostname
      #       whoami
      #       sinfo
      #       NNODE=1
      #       NGPU=8
      #       GPU_LIST=$(seq 0 $(($NGPU - 1)))
      #       OUTPUT=$(mktemp -d -p /nfs/cluster)
      #       ls ${OUTPUT}

      # JOB=$(sbatch << EOF
      # #!/bin/bash
      # #SBATCH --nodes=${NNODE}
      # #SBATCH --gpus-per-node=${NGPU}
      # #SBATCH --time=00:30:00
      # #SBATCH --exclusive
      # srun \
      #   --container-image=ghcr.io#nvidia/t5x:latest \
      #   --container-mounts=${OUTPUT}:/output \
      #   --container-entrypoint \
      #   test-t5x.sh \
      #     --output /output/$DATE-${NGPU}G${NNODE}N \
      #     --dtype bfloat16 \
      #     --batch-per-gpu 16 \
      #     --gpus ${GPU_LIST} \
      #     --epochs 7 \
      #     --steps-per-epoch 100
      # EOF)


      #   run: |
      #     NGPU=8
      #     NNODE=1
      #     DATE=$(date "+%Y-%m-%d")
      #     OUTPUT="/${DATE}-${NGPU}G${NNODE}N"
      #     ssh -o "ServerAliveInterval=10" ${{ env.OCI_CLUSTER_BASTION }} |& tee t5x.log  << EOF
      #     salloc -N 1 -t 4:00:00 --gpus-per-node=8
      #     mkdir -p ${HOME}/${OUTPUT}
      #     srun \
      #       --container-name=t5x \
      #       --container-image=ghcr.io#nvidia/t5x:latest \
      #       --container-mounts=${HOME}/${OUTPUT}:${OUTPUT}
      #       --container-entrypoint \
      #       test-t5x.sh \
      #         --output ${OUTPUT} \
      #         --dtype bfloat16 \
      #         --batch-per-gpu 16 \
      #         --gpus 0,1,2,3,4,5,6,7 \
      #         --epochs 7 \
      #         --steps-per-epoch 100
      #     scp -r ${OUTPUT_HOST} ${{ env.OCI_TENSORBOARD_HOST }}:/tensorboard-logs
      #     EOF

      # - name: Postprocessing
      #   shell: bash -x -e {0}
      #   run: |
      #     true