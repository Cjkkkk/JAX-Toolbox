name: ~test T5X

on:
  #   branches: [ "main" ] 
  # pull_request:
  #   branches: [ "main" ]
  # schedule:
  #   - cron: '30 3 * * *'  # runs daily at 03:30 AM
  ## allow manual run from the Actions tab
  workflow_call:

env:
  OCI_TENSORBOARD_HOST: "ubuntu@165.1.79.135"

jobs:

  MGMN-scaling:

    strategy:
      matrix:
        N_NODE: [1]
        N_GPU: [1, 2, 4, 8]

    runs-on: ubuntu-22.04

    steps:
      - name: Print environment variables
        run: env

      - name: Setup SSH agent
        uses: webfactory/ssh-agent@v0.8.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Add known SSH host
        shell: bash -x -e {0}
        run: |
          echo "150.230.212.101 ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDcOJt0Q0qYfShF03/rFPYpq+muMHBIfMlvitzEsSm4onWkG4YU0NBvG5WKcU2dLoMdhCIy+SQYtDeNm9Lj5GIqsLSsVMBSAurIMAzyiJU3DuahiWQGMa3rOVEFzgRtmo58202Ijw61WwVi47OvzJL72Oy2RO8hqVvU0ojcQo1jiQxtj39u1Be7dzIXJHLs7xdpI7V8mGxwQ1dgcjcXSh43br9V24pAebK2abGD8KRZ1H0YDgyaYek0ub5AHAeeznL/FUs0lud1xicABd5qo+w1PyIA+1A+TkRTrbHCBtc2w9w3zaO4p+Yi/ITTjhtnPTAmTD7U+km2mhiR+dLbx15D" >> ~/.ssh/known_hosts
          echo "165.1.79.135 ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQC+/i0SQXfIUF/GVFFw4XbjPObOuI5Xe7ZYS8fxYtQGXVBnaGs+2qYpmNS2GNoMhAc/w6+uP0gNJcVj0TXNWtSJgXgagO6zVqD4xGSqNOU82PsqRiJvVzjA4nTcGrBdIzh6sLwgkjuGKKjF5XhCJ6BQwPH/GLS9b16eewi3Ppmxp1SKca2sXIUPLrCOpZ4RY/hiQm9vTUfmOWuijxQcbOGWtc6ghV1IJpyCZGtvakhr/nR1LFQmDdbJ7MtKyqmoBbeiEQmlht2a7FGVQY8KTZsVSpYUUHT2zwGLBqogRlaxbv3ANavklG06ZpQJtpf300nr6Ix1UpAedhVpuJVGVJR9kyGZHrll60tjTMzy5Kq3RmxjmF9b524Ig8gMmwIi1G+sU5+OUSzVNGzeuvAhSOwKbFLFq9n8nPdBYGh2MDSm4aIv3Zl/YmyM4Ts2OdKF/BWyqUaGtgz38zUWEbZ2QvnebiTGcBkjBC4b8yMCjTubIFanjUNOFWz4E6GWW5enh5c=" >> ~/.ssh/known_hosts

      - name: Labels and metadata
        id: meta
        shell: bash -x -e {0}
        run: |
          GPU_LIST=$(seq -s , 0 $(($${{ matrix.N_GPU }} - 1)))
          TEST_CASE_NAME=${{ matrix.N_GPU }}G${{ matrix.N_NODE }}N
          JOB_NAME=${GITHUB_RUN_ID}-${TEST_CASE_NAME}
          LOG_FILE=/nfs/cluster/${JOB_NAME}.log
          MODEL_PATH=/nfs/cluster/${JOB_NAME}
          for var in GPU_LIST TEST_CASE_NAME JOB_NAME LOG_FILE MODEL_PATH; do
            echo "$var=${!var}" >> $GITHUB_OUTPUT
          done

      - name: Submit SLURM jobs over SSH
        id: submit
        shell: bash -O expand_aliases -x -e {0}
        run: |
          alias SSH='ssh -o "ServerAliveInterval 7" ${{ secrets.CLUSTER_LOGIN_USER }}@${{ secrets.CLUSTER_LOGIN_IP }}'
          SSH "date && hostname && sinfo"          
          JOB=$(SSH sbatch --parsable << EOF
          #!/bin/bash
          #SBATCH --nodes=${{ matrix.N_NODE }}
          #SBATCH --gpus-per-node=${{ matrix.N_GPU }}
          #SBATCH --exclusive
          #SBATCH --time=00:30:00
          #SBATCH --output=${{ steps.meta.outputs.LOG_FILE }}
          time srun \
            --container-image=ghcr.io#nvidia/t5x:latest \
            --container-mounts=${{ steps.meta.outputs.MODEL_PATH }}:/output \
            --container-entrypoint \
            test-t5x.sh \
              --output /output/${{ steps.meta.outputs.TEST_CASE_NAME }} \
              --dtype bfloat16 \
              --batch-per-gpu 16 \
              --gpus ${{ steps.meta.outputs.GPU_LIST }} \
              --epochs 7 \
              --steps-per-epoch 100
          EOF
          )

          set +x
          while SSH squeue -j $JOB | grep -q $JOB; do
            echo "SLURM Job $JOB is still running."
            sleep 15
          done
          echo "SLRUM Job $JOB finished."
          set -x

          mkdir output/
          rsync -avz --progress \
            ${{ secrets.CLUSTER_LOGIN_USER }}@${{ secrets.CLUSTER_LOGIN_IP }}:${{ steps.meta.outputs.LOG_FILE }} \
            output/${{ steps.meta.outputs.TEST_CASE_NAME }}.log
          rsync -avz --progress \
            ${{ secrets.CLUSTER_LOGIN_USER }}@${{ secrets.CLUSTER_LOGIN_IP }}:${{ steps.meta.outputs.MODEL_PATH }}/* \
            output/
          rsync -avz --progress \
            output/* \
            ${{ secrets.TENSORBOARD_UPLOAD_USER }}@${{ vars.TENSORBOARD_SERVER_IP }}:/tensorboard-logs/${GITHUB_RUN_ID}

      # - name: Postprocessing
      #   shell: bash -x -e {0}
      #   run: |
      #     true
        #     - name: Configure variables
        # shell: bash -x -e {0}
        # run: |
        #   TZ="America/Los_Angeles" DATE=$(date "+%Y-%m-%d")
        #   echo "DATE=${DATE}" >> $GITHUB_ENV

