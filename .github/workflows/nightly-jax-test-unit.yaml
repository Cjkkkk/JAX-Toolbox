name: Nightly JAX unit test

on:
  workflow_run:
    workflows: [Nightly JAX build]
    types: [completed]
    branches: [main]
  workflow_dispatch:
    inputs:
      JAX_IMAGE:
        type: string
        description: 'JAX image built by NVIDIA/JAX-Toolbox'
        default: 'ghcr.io/nvidia/jax:latest'
        required: true
      PUBLISH:
        type: boolean
        description: Update status badge?
        default: false
        required: true

permissions:
  contents: read  # to fetch code
  actions:  write # to cancel previous workflows
  packages: write # to upload container

env:
  DEFAULT_JAX_IMAGE: 'ghcr.io/nvidia/jax:latest'
  BADGE_ENDPOINT: 'jax-unit-test-status.json'

jobs:

  metadata:
    runs-on: ubuntu-22.04
    outputs:
      JAX_IMAGE: ${{ steps.date.outputs.JAX_IMAGE }}
    steps:
      - name: Set metadata
        id: date
        shell: bash -x -e {0}
        run: |
          if [[ -z "${{ inputs.JAX_IMAGE }}" ]]; then
            JAX_IMAGE=${{ env.DEFAULT_JAX_IMAGE }}
          else
            JAX_IMAGE=${{ inputs.JAX_IMAGE }}
          fi
          echo "JAX_IMAGE=${JAX_IMAGE}" >> $GITHUB_OUTPUT

  run-jobs:
    needs: metadata
    uses: ./.github/workflows/_test_jax.yaml
    if: (github.event_name == 'workflow_run' && github.event.workflow_run.conclusion == 'success') || github.event_name == 'workflow_dispatch'
    with:
      JAX_IMAGE: ${{ needs.metadata.outputs.JAX_IMAGE }}
    secrets: inherit

  publish:
    needs: [metadata, run-jobs]
    if: (github.event_name == 'workflow_run' && github.event.workflow_run.conclusion == 'success') || (github.event_name == 'workflow_dispatch' && inputs.PUBLISH)
    runs-on: ubuntu-22.04
    steps:
      - name: Download artifact from the previous job
        uses: actions/download-artifact@v3
        with:
          name: test-logs
          path: test-logs

      - name: Count the number of failed tests
        shell: bash -x -e {0}
        run: |
          FAILED_TESTS=$(cat test-logs/* | grep -c 'FAILED in' || true)
          PASSED_TESTS=$(cat test-logs/* | grep -c 'PASSED in' || true)
          TOTAL_TESTS=$((FAILED_TESTS + PASSED_TESTS))
          if [[ $FAILED_TESTS == 0 ]]; then
            BADGE_COLOR=brightgreen
          else
            if [[ $FAILED_TESTS < $TOTAL_TESTS ]]; then
              BADGE_COLOR=yellow
            else
              BADGE_COLOR=red
            fi
          fi
          cat > ${{ env.BADGE_ENDPOINT }} << EOF
          {
            "schemaVersion": 1,
            "label": "V100 Unit",
            "message": "${PASSED_TESTS}/${TOTAL_TESTS} passed",
            "color": "${BADGE_COLOR}"
          }
          EOF

      - name: Update status badge endpoint in gist
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.NVJAX_GIST_TOKEN }}
          script: |
            const fs = require('fs').promises;
            const gistId = "${{ vars.BADGE_ENDPOINT_GIST_ID }}";
            const filename = "${{ env.BADGE_ENDPOINT }}";
            const content = await fs.readFile(filename, 'utf8');

            const { data: gist } = await github.rest.gists.get({ gist_id: gistId });

            await github.rest.gists.update({
              gist_id: gistId,
              files: {
                [filename]: { content },
                ...Object.fromEntries(Object.entries(gist.files).filter(([name]) => name !== filename))
              }
            });

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: endpoint
          path: endpoint.json

  if-upstream-failed:
    runs-on: ubuntu-latest
    if: (github.event_name == 'workflow_run' && github.event.workflow_run.conclusion == 'failure') && github.event_name != 'workflow_dispatch'
    steps:
      - run: echo 'Upstream workflow failed, aborting run' && exit 1