name: Nightly Pax MGMN performance test

on:
  workflow_run:
    workflows: [Nightly Pax build]
    types: [completed]
    branches: [main]
  workflow_dispatch:
    inputs:
      PAX_IMAGE:
        type: string
        description: Pax container
        default: 'ghcr.io/nvidia/pax:latest'
        required: true
      PUBLISH:
        type: boolean
        description: Publish dated results to tensorboard server?
        default: false
        required: false

permissions:
  contents: read  # to fetch code
  actions:  write # to cancel previous workflows
  packages: write # to upload container

env:
  DEFAULT_PAX_IMAGE: 'ghcr.io/nvidia/pax:latest'

jobs:

  metadata:
    runs-on: ubuntu-22.04
    outputs:
      BUILD_DATE: ${{ steps.date.outputs.BUILD_DATE }}
      PAX_IMAGE: ${{ steps.date.outputs.PAX_IMAGE }}
    steps:
      - name: Set metadata
        id: date
        shell: bash -x -e {0}
        run: |
          BUILD_DATE=$(TZ='US/Los_Angeles' date '+%Y-%m-%d')
          echo "BUILD_DATE=${BUILD_DATE}" >> $GITHUB_OUTPUT

          PAX_IMAGE=${{ inputs.PAX_IMAGE }}
          PAX_IMAGE=${PAX_IMAGE:-${{ env.DEFAULT_PAX_IMAGE }}}
          echo "PAX_IMAGE=${PAX_IMAGE}" >> $GITHUB_OUTPUT

  run-jobs:
    needs: metadata
    uses: ./.github/workflows/_test_pax.yaml
    if: (github.event_name == 'workflow_run' && github.event.workflow_run.conclusion == 'success') || github.event_name == 'workflow_dispatch'
    with:
      PAX_IMAGE: ${{ needs.metadata.outputs.PAX_IMAGE }}
    secrets: inherit

  publish:
    needs: [metadata, run-jobs]
    runs-on: ubuntu-22.04
    steps:
      - name: Setup SSH agent
        uses: webfactory/ssh-agent@v0.8.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Setup SSH known hosts
        id: ssh-known-hosts
        run: |
          mkdir -p ~/.ssh
          cat >> ~/.ssh/known_hosts << EOF
          ${{ vars.SSH_KNOWN_HOSTS }}
          EOF
          chmod 600 ~/.ssh/known_hosts
          echo "FILE=$(realpath ~/.ssh/known_hosts)" >> $GITHUB_OUTPUT

      - name: Setup SSH config
        id: ssh-config
        run: |
          mkdir -p ~/.ssh
          cat >> ~/.ssh/config << EOF
          ${{ vars.SSH_CONFIG }}
          EOF
          chmod 600 ~/.ssh/config

      - name: Create dated folder and generate TensorBoard query URL
        id: mkdir
        shell: ssh -T tensorboard bash -x -e < {0}
        run: |
          FOLDER="${{ needs.metadata.outputs.BUILD_DATE }}/PAX"
          # copy folder
          rsync -av /tensorboard-logs/${GITHUB_RUN_ID}/ /tensorboard-logs/${FOLDER}/
          # generate query URL
          (
          cat << EOF

          ## PAX MGMN nightly training: ${{ needs.metadata.outputs.BUILD_DATE }}

          [view metrics](http://${{ vars.HOSTNAME_TENSORBOARD }}:6006/#scalars&regexInput=$(jq -nr --arg url "${FOLDER}" '$url|@uri')&_smoothingWeight=0&tagFilter=seqs_per)

          EOF
          ) | tee $GITHUB_STEP_SUMMARY

  if-upstream-failed:
    runs-on: ubuntu-latest
    if: (github.event_name == 'workflow_run' && github.event.workflow_run.conclusion == 'failure') && github.event_name != 'workflow_dispatch'
    steps:
      - run: echo 'Upstream workflow failed, aborting run' && exit 1