name: CI

on:
  pull_request:
  workflow_dispatch:
    inputs:
      # BUILD_BASE:
      #   description: 'Build new base image or otherwise use ghcr.io/nvidia/jax-toolbox:base'
      #   type: boolean
      #   required: true
      #   default: true
      SRC_JAX:
        description: 'JAX source, [repository]@[branch, tag, or commit]'
        type: string
        required: true
        default: 'https://github.com/google/jax.git@main'
      SRC_XLA:
        description: 'XLA source, [repository]@[branch, tag, or commit]'
        type: string
        required: true
        default: 'https://github.com/openxla/xla.git@main'
      SRC_TE:
        description: 'TE source, [repository]@[branch, tag, or commit]'
        type: string
        required: true
        default: 'https://github.com/NVIDIA/TransformerEngine.git@main'
      SRC_T5X:
        description: 'T5X source, [repository]@[branch, tag, or commit]'
        type: string
        required: true
        default: 'https://github.com/google-research/t5x.git@main'
      SRC_PAXML:
        description: 'Paxml source, [repository]@[branch, tag, or commit]'
        type: string
        required: true
        default: 'https://github.com/google/paxml.git@main'
      SRC_PRAXIS:
        description: 'Praxis source, [repository]@[branch, tag, or commit]'
        type: string
        required: true
        default: 'https://github.com/google/praxis.git@main'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: ${{ github.ref != 'refs/heads/main' }}

permissions:
  contents: read  # to fetch code
  actions:  write # to cancel previous workflows
  packages: write # to upload container

jobs:

  metadata:
    runs-on: ubuntu-22.04
    outputs:
      BUILD_DATE: ${{ steps.date.outputs.BUILD_DATE }}
    steps:
      - name: Set metadata
        id: date
        shell: bash -x -e {0}
        run: |
          BUILD_DATE=$(TZ='US/Los_Angeles' date '+%Y-%m-%d')
          echo "BUILD_DATE=${BUILD_DATE}" >> $GITHUB_OUTPUT

          REPO_JAX=$(echo ${{ inputs.SRC_JAX }} | cut -f 1 -d @)
          REF_JAX=$(echo ${{ inputs.SRC_JAX }}  | cut -f 2 -d @)
          echo "REPO_JAX=${REPO_JAX}" >> $GITHUB_OUTPUT
          echo "REF_JAX=${REF_JAX}" >> $GITHUB_OUTPUT

          REPO_XLA=$(echo ${{ inputs.SRC_XLA }} | cut -f 1 -d @)
          REF_XLA=$(echo ${{ inputs.SRC_XLA }}  | cut -f 2 -d @)
          echo "REPO_XLA=${REPO_XLA}" >> $GITHUB_OUTPUT
          echo "REF_XLA=${REF_XLA}" >> $GITHUB_OUTPUT

          REPO_TE=$(echo ${{ inputs.SRC_TE }} | cut -f 1 -d @)
          REF_TE=$(echo ${{ inputs.SRC_TE }}  | cut -f 2 -d @)
          echo "REPO_TE=${REPO_TE}" >> $GITHUB_OUTPUT
          echo "REF_TE=${REF_TE}" >> $GITHUB_OUTPUT

          REPO_T5X=$(echo ${{ inputs.SRC_T5X }} | cut -f 1 -d @)
          REF_T5X=$(echo ${{ inputs.SRC_T5X }}  | cut -f 2 -d @)
          echo "REPO_T5X=${REPO_T5X}" >> $GITHUB_OUTPUT
          echo "REF_T5X=${REF_T5X}" >> $GITHUB_OUTPUT

          REPO_PAXML=$(echo ${{ inputs.SRC_PAXML }} | cut -f 1 -d @)
          REF_PAXML=$(echo ${{ inputs.SRC_PAXML }}  | cut -f 2 -d @)
          echo "REPO_PAXML=${REPO_PAXML}" >> $GITHUB_OUTPUT
          echo "REF_PAXML=${REF_PAXML}" >> $GITHUB_OUTPUT

          REPO_PRAXIS=$(echo ${{ inputs.SRC_PRAXIS }} | cut -f 1 -d @)
          REF_PRAXIS=$(echo ${{ inputs.SRC_PRAXIS }}  | cut -f 2 -d @)
          echo "REPO_PRAXIS=${REPO_PRAXIS}" >> $GITHUB_OUTPUT
          echo "REF_PRAXIS=${REF_PRAXIS}" >> $GITHUB_OUTPUT

  build-base:
    needs: metadata
    uses: ./.github/workflows/_build_base.yaml
    with:
      BUILD_DATE: ${{ needs.metadata.outputs.BUILD_DATE }}
    secrets: inherit

  build-jax:
    needs: [metadata, build-base]
    uses: ./.github/workflows/_build_jax.yaml
    with:
      BUILD_DATE: ${{ needs.metadata.outputs.BUILD_DATE }}
      BASE_IMAGE: ${{ needs.build-base.outputs.DOCKER_TAGS }}
      REPO_JAX: ${{ needs.metadata.outputs.REPO_JAX }}
      REF_JAX: ${{ needs.metadata.outputs.REF_JAX }}
      REPO_XLA: ${{ needs.metadata.outputs.REPO_XLA }}
      REF_XLA: ${{ needs.metadata.outputs.REF_XLA }}
    secrets: inherit

  build-te:
    needs: [metadata, build-jax]
    uses: ./.github/workflows/_build_te.yaml
    with:
      BUILD_DATE: ${{ needs.metadata.outputs.BUILD_DATE }}
      BASE_IMAGE: ${{ needs.build-jax.outputs.DOCKER_TAGS }}
      REPO_TE: ${{ needs.metadata.outputs.REPO_TE }}
      REF_TE: ${{ needs.metadata.outputs.REF_TE }}
    secrets: inherit

  build-t5x:
    needs: [metadata, build-jax]
    uses: ./.github/workflows/_build_t5x.yaml
    with:
      BUILD_DATE: ${{ needs.metadata.outputs.BUILD_DATE }}
      BASE_IMAGE: ${{ needs.build-jax.outputs.DOCKER_TAGS }}
      REPO_T5X: ${{ needs.metadata.outputs.REPO_T5X }}
      REF_T5X: ${{ needs.metadata.outputs.REF_T5X }}
    secrets: inherit

  build-pax:
    needs: [metadata, build-jax]
    uses: ./.github/workflows/_build_pax.yaml
    with:
      BUILD_DATE: ${{ needs.metadata.outputs.BUILD_DATE }}
      BASE_IMAGE: ${{ needs.build-jax.outputs.DOCKER_TAGS }}
      REPO_PAXML: ${{ needs.metadata.outputs.REPO_PAXML }}
      REF_PAXML: ${{ needs.metadata.outputs.REF_PAXML }}
      REPO_PRAXIS: ${{ needs.metadata.outputs.REPO_PRAXIS }}
      REF_PRAXIS: ${{ needs.metadata.outputs.REF_PRAXIS }}
    secrets: inherit

  build-rosetta:
    uses: ./.github/workflows/_build_rosetta.yaml
    needs: [metadata, build-t5x]
    with:
      BUILD_DATE: ${{ needs.metadata.outputs.BUILD_DATE }}
      BASE_IMAGE: ${{ needs.build-t5x.outputs.DOCKER_TAGS }}
    secrets: inherit

  build-summary:
    needs: [build-base, build-jax, build-te, build-t5x, build-pax, build-rosetta]
    runs-on: ubuntu-22.04
    steps:
      - name: Generate job summary for container build
        shell: bash -x -e {0}
        run: |
          cat > $GITHUB_STEP_SUMMARY << EOF
          # Images created          

          | Image   | Link                                           |
          | ------- | ---------------------------------------------- |
          | Base    | ${{ needs.build-base.outputs.DOCKER_TAGS }}    |
          | JAX     | ${{ needs.build-jax.outputs.DOCKER_TAGS }}     |
          | JAX-TE  | ${{ needs.build-te.outputs.DOCKER_TAGS }}      |
          | T5X     | ${{ needs.build-t5x.outputs.DOCKER_TAGS }}     |
          | PAX     | ${{ needs.build-pax.outputs.DOCKER_TAGS }}     |
          | ROSETTA | ${{ needs.build-rosetta.outputs.DOCKER_TAGS }} |
          EOF

  test-jax:
    needs: build-jax
    uses: ./.github/workflows/_test_jax.yaml
    with:
      JAX_IMAGE: ${{ needs.build-jax.outputs.DOCKER_TAGS }}
    secrets: inherit

  test-te:
    needs: build-te
    uses: ./.github/workflows/_test_te.yaml
    with:
      JAX_TE_IMAGE: ${{ needs.build-te.outputs.DOCKER_TAGS }}
    secrets: inherit

  test-t5x:
    needs: build-t5x
    uses: ./.github/workflows/_test_t5x.yaml
    with:
      T5X_IMAGE: ${{ needs.build-t5x.outputs.DOCKER_TAGS }}
    secrets: inherit

  test-pax:
    needs: build-pax
    uses: ./.github/workflows/_test_pax.yaml
    with:
      PAX_IMAGE_TAG: ${{ needs.build-pax.outputs.DOCKER_TAGS }}
    secrets: inherit
